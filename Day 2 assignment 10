#include <stdio.h>
#include <limits.h>

int minJumps(int arr[], int n)
{
    int jumps[n]; // to store the minimum number of jumps required to reach each index
    int i, j;
    
    if (n == 0 || arr[0] == 0) { // if the array is empty or the first element is 0, we can't move forward
        return -1;
    }
    
    jumps[0] = 0; // minimum number of jumps required to reach the first index is 0
    
    for (i = 1; i < n; i++) {
        jumps[i] = INT_MAX; // set the minimum number of jumps to a large value initially
        
        for (j = 0; j < i; j++) {
            if (i <= j + arr[j] && jumps[j] != INT_MAX) { // if we can reach the ith index from the jth index
                jumps[i] = jumps[j] + 1; 
                break;
            }
        }
    }
    
    if (jumps[n-1] == INT_MAX) { 
        return -1;
    }
    
    return jumps[n-1];
}

int main()
{
    int arr[] = {2, 3, 1, 1, 4};
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("Minimum number of jumps required to reach the end: %d", minJumps(arr, n));
    return 0;
}
